my_times <- seq(0, 21, length = 22)
num_iterations <- nrow(model_data)
all_simulations <- list()
for (i in 1:num_iterations) {
my_primary <- list(mu_opt = model_data$mu_opt[i], Nmax = model_data$Nmax[i], N0 = model_data$N0[i], Q0 = model_data$Q0[i])
sec_temperature <- list(model = "reducedRatkowsky", xmin = model_data$Tmin[i], b = model_data$b[i], xopt = model_data$Topt[i])
my_secondary <- list(temperature = sec_temperature)
growth <- predict_dynamic_growth(times = my_times,
# env_conditions = tibble(time = env_cond_time[i,],
# temperature = env_cond_temp[i,]),
env_conditions = tibble(time = my_times,
temperature = 6),
my_primary,
my_secondary)
sim <- growth$simulation
all_simulations[[i]] <- sim
}
final_conc <- do.call(rbind, all_simulations)
# Generate output
model_data_1 <- model_data[rep(1:nrow(model_data), each = 22), ]
model_data_sub <- model_data_1[,c("lot_id","unit_id","N0","spoilage_type", "STorAT")]
# model_data_sub <- model_data_1[,c("lot_id","unit_id","spoilage_type", "t_F", "T_F", "t_T", "T_T",
# "t_S", "T_S", "t_T2", "T_T2", "T_H")]
count_result <- final_conc[,c("time","N","logN")]
df <- cbind(model_data_sub,count_result)
df
df_D7 = subset(df, time == "7")
df_D14 = subset(df, time == "14")
df_D21 = subset(df, time == "21")
training_data <- read.csv("train_data_with_DI.csv")
setwd("C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Validation")
training_data <- read.csv("train_data_with_DI.csv")
testing_data <- read.csv("test_data_with_DI_new.csv")
combined_data <- rbind(training_data[,3:14],testing_data[,c(2:5,7,9,11,6,8,10,12:13)])
combined_data_sub <- subset(combined_data, Day_Initial <= 3)
SPC_D1 <- combined_data_sub$SPC_DI
# microflora
Microflora <- sample(SPC_D1, 10000, replace = TRUE)
Spore_D7 =  df_D7$N
SPC_D7_sim = log10(Spore_D7 + Microflora)
Spore_D14 = df_D14$N
SPC_D14_sim = log10(Spore_D14 + Microflora)
Spore_D21 = df_D21$N
SPC_D21_sim = log10(Spore_D21 + Microflora)
hist(SPC_D7_sim, breaks = 25)
median(SPC_D7_sim)
quantile(SPC_D7_sim,0.025)
quantile(SPC_D7_sim,0.975)
hist(SPC_D14_sim, breaks = 25)
median(SPC_D14_sim)
quantile(SPC_D14_sim,0.025)
quantile(SPC_D14_sim,0.975)
hist(SPC_D21_sim, breaks = 25)
median(SPC_D21_sim)
quantile(SPC_D21_sim,0.025)
quantile(SPC_D21_sim,0.975)
library(dplyr)
library(tidyr)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
combined_dataset
library(dplyr)
library(tidyr)
combined_dataset_grouped <- combined_dataset %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n()) %>%
ungroup()
combined_dataset_grouped
combined_dataset_grouped <- combined_dataset_grouped %>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
combined_dataset_grouped$total <- rowSums(combined_dataset_grouped[, c("PPC", "spore spoilage", "no spoilage")])
combined_dataset_grouped$total <- rowSums(combined_dataset_grouped[, c("PPC", "spore spoilage", "no spoilage")])
combined_dataset_grouped
percentage <- combined_dataset_grouped %>%
mutate(PPC_percent = PPC / total,
spore_percent =`spore spoilage` / total) %>%
select(plantID, PPC_percent, spore_percent)
percentage
View(percentage)
hist(percentage$PPC_percent, breaks = 25)
hist(percentage$PPC_percent, breaks = 40)
hist(percentage$PPC_percent, breaks = 30)
save.image("C:/Users/sujun/Documents/GitHub/Combined-Spoilage-Model-App/Validation/Percent_Spoiled_1.RData")
library(dplyr)
library(tidyr)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
# Group by plantID
combined_dataset_grouped <- combined_dataset %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n()) %>%
ungroup()
combined_dataset_grouped <- combined_dataset_grouped %>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
combined_dataset_grouped$total <- rowSums(combined_dataset_grouped[, c("PPC", "spore spoilage", "no spoilage")])
percentage <- combined_dataset_grouped %>%
mutate(PPC_percent = PPC / total,
spore_percent =`spore spoilage` / total) %>%
select(plantID, PPC_percent, spore_percent)
percentage
hist(percentage$PPC_percent, breaks = 20)
View(percentage)
rm(list=ls())
library(dplyr)
library(tidyr)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
tier_1 = subset(combined_dataset,tier == "1")
tier_2 = subset(combined_dataset,tier == "2")
tier_3 = subset(combined_dataset,tier == "3")
# Group by tier and plantID
tier_1_spoil_percent <- tier_1 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_1_spoil_percent = as.data.frame(tier_1_spoil_percent)
tier_1_spoil_percent <- tier_1_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier1 <- tier_1_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_1_spoil_percent <- tier_1 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_1_spoil_percent = as.data.frame(tier_1_spoil_percent)
tier_1_spoil_percent <- tier_1_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier1 <- tier_1_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_2_spoil_percent <- tier_2 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_2_spoil_percent = as.data.frame(tier_2_spoil_percent)
tier_2_spoil_percent <- tier_2_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier2 <- tier_2_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_3_spoil_percent <- tier_3 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_3_spoil_percent = as.data.frame(tier_3_spoil_percent)
tier_3_spoil_percent <- tier_3_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier3 <- tier_3_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_1_spoil_percent
rm(list=ls())
library(dplyr)
library(tidyr)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
tier_1 = subset(combined_dataset,tier == "1")
tier_2 = subset(combined_dataset,tier == "2")
tier_3 = subset(combined_dataset,tier == "3")
# Group by tier and plantID
tier_1_spoil_percent <- tier_1 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_1_spoil_percent = as.data.frame(tier_1_spoil_percent)
tier_1_spoil_percent <- tier_1_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier1 <- tier_1_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_2_spoil_percent <- tier_2 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_2_spoil_percent = as.data.frame(tier_2_spoil_percent)
tier_2_spoil_percent <- tier_2_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier2 <- tier_2_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_3_spoil_percent <- tier_3 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_3_spoil_percent = as.data.frame(tier_3_spoil_percent)
tier_3_spoil_percent <- tier_3_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier3 <- tier_3_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
percentages_tier1
percentages_tier2
percentages_tier3
rm(list=ls())
library(dplyr)
library(tidyr)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
combined_dataset_grouped <- combined_dataset %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n()) %>%
ungroup()
combined_dataset_grouped <- combined_dataset_grouped %>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
combined_dataset_grouped$total <- rowSums(combined_dataset_grouped[, c("PPC", "spore spoilage", "no spoilage")])
percentage <- combined_dataset_grouped %>%
mutate(PPC_percent = PPC / total,
spore_percent =`spore spoilage` / total) %>%
select(plantID, PPC_percent, spore_percent)
percentage
percentage$PPC_percent
kmeans_result <- kmeans(percentage$PPC_percent, centers = 3)
kmeans_result
kmeans_result$cluster
rm("kmeans_result")
min(percentage$PPC_percent)
quantile(percentage$PPC_percent, 0.25)
quantile(percentage$PPC_percent, 0.75)
quantile(percentage$PPC_percent, 0.5)
percentage$PPC_percent
order(percentage$PPC_percent)
print(sort(percentage$PPC_percent))
library(dplyr)
library(tidyr)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
tier_1 = subset(combined_dataset,tier == "1")
tier_2 = subset(combined_dataset,tier == "2")
tier_3 = subset(combined_dataset,tier == "3")
# Group by tier and plantID
tier_1_spoil_percent <- tier_1 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_1_spoil_percent = as.data.frame(tier_1_spoil_percent)
tier_1_spoil_percent <- tier_1_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier1 <- tier_1_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_2_spoil_percent <- tier_2 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_2_spoil_percent = as.data.frame(tier_2_spoil_percent)
tier_2_spoil_percent <- tier_2_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier2 <- tier_2_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_3_spoil_percent <- tier_3 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_3_spoil_percent = as.data.frame(tier_3_spoil_percent)
tier_3_spoil_percent <- tier_3_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier3 <- tier_3_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
percentages_tier3
rm(list=ls())
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
# Group by plantID
combined_dataset_grouped <- combined_dataset %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n()) %>%
ungroup()
combined_dataset_grouped <- combined_dataset_grouped %>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
combined_dataset_grouped$total <- rowSums(combined_dataset_grouped[, c("PPC", "spore spoilage", "no spoilage")])
percentage <- combined_dataset_grouped %>%
mutate(PPC_percent = PPC / total,
spore_percent =`spore spoilage` / total) %>%
select(plantID, PPC_percent, spore_percent)
percentage
library(dplyr)
library(tidyr)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
tier_1 = subset(combined_dataset,tier == "1")
tier_2 = subset(combined_dataset,tier == "2")
tier_3 = subset(combined_dataset,tier == "3")
# Group by tier and plantID
tier_1_spoil_percent <- tier_1 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_1_spoil_percent = as.data.frame(tier_1_spoil_percent)
tier_1_spoil_percent <- tier_1_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier1 <- tier_1_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_2_spoil_percent <- tier_2 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_2_spoil_percent = as.data.frame(tier_2_spoil_percent)
tier_2_spoil_percent <- tier_2_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier2 <- tier_2_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
tier_3_spoil_percent <- tier_3 %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n())%>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
tier_3_spoil_percent = as.data.frame(tier_3_spoil_percent)
tier_3_spoil_percent <- tier_3_spoil_percent %>%
mutate(total = PPC + `spore spoilage` + `no spoilage`)
percentages_tier3 <- tier_3_spoil_percent %>%
mutate(PPC_percentage = PPC / total,
spore_spoilage_percentage =`spore spoilage` / total) %>%
select(plantID, PPC_percentage, spore_spoilage_percentage)
percentages_tier3
hist(percentages_tier3$PPC_percentage)
hist(percentages_tier3$spore_spoilage_percentage)
percentages_tier2
hist(percentages_tier2$PPC_percentage)
percentage
rm(list=ls())
library(dplyr)
library(tidyr)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
combined_dataset_grouped <- combined_dataset %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n()) %>%
ungroup()
combined_dataset_grouped <- combined_dataset_grouped %>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
combined_dataset_grouped$total <- rowSums(combined_dataset_grouped[, c("PPC", "spore spoilage", "no spoilage")])
percentage <- combined_dataset_grouped %>%
mutate(PPC_percent = PPC / total,
spore_percent =`spore spoilage` / total) %>%
select(plantID, PPC_percent, spore_percent)
percentage
View(percentage)
print(percentage)
write.csv(percentage,"spoil_percent.csv")
library(dplyr)
library(tidyr)
library(ggplot2)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
View(combined_dataset)
# Group by plantID
combined_dataset_grouped <- combined_dataset %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n()) %>%
ungroup()
combined_dataset_grouped <- combined_dataset_grouped %>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
combined_dataset_grouped$total <- rowSums(combined_dataset_grouped[, c("PPC", "spore spoilage", "no spoilage")])
percentage <- combined_dataset_grouped %>%
mutate(PPC_percent = PPC / total,
spore_percent =`spore spoilage` / total) %>%
select(plantID, PPC_percent, spore_percent)
# Cluster by PPC_percent
kmeans_result_ppc <- kmeans(percentage$PPC_percent, centers = 3)
percentage$PPC_cluster <- kmeans_result_ppc$cluster
Cluster_1 <- subset(percentage, PPC_cluster == 1)
Cluster_2 <- subset(percentage, PPC_cluster == 2)
Cluster_3 <- subset(percentage, PPC_cluster == 3)
Cluster_1
Cluster_2 <- subset(percentage, PPC_cluster == 2)
Cluster_3 <- subset(percentage, PPC_cluster == 3)
Cluster_2
Cluster_3
View(percentage)
# Cluster by PPC_percent
kmeans_result_ppc <- kmeans(percentage$PPC_percent, centers = 3)
kmeans_result_ppc
percentage$PPC_cluster <- kmeans_result_ppc$cluster
percentage
Cluster_1 <- subset(percentage, PPC_cluster == 1)
Cluster_2 <- subset(percentage, PPC_cluster == 2)
Cluster_3 <- subset(percentage, PPC_cluster == 3)
Cluster_1
Cluster_2
Cluster_3
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
# Group by plantID
combined_dataset_grouped <- combined_dataset %>%
group_by(plantID, spoilagetype) %>%
summarise(count = n()) %>%
ungroup()
combined_dataset_grouped <- combined_dataset_grouped %>%
pivot_wider(names_from = spoilagetype, values_from = count, values_fill = 0)
combined_dataset_grouped$total <- rowSums(combined_dataset_grouped[, c("PPC", "spore spoilage", "no spoilage")])
percentage <- combined_dataset_grouped %>%
mutate(PPC_percent = PPC / total,
spore_percent =`spore spoilage` / total) %>%
select(plantID, PPC_percent, spore_percent)
# Cluster by PPC_percent
kmeans_result_ppc <- kmeans(percentage$PPC_percent, centers = 3)
percentage$PPC_cluster <- kmeans_result_ppc$cluster
Cluster_1 <- subset(percentage, PPC_cluster == 1)
Cluster_2 <- subset(percentage, PPC_cluster == 2)
Cluster_3 <- subset(percentage, PPC_cluster == 3)
Cluster_1
# Cluster by PPC_percent
set.seed(1)
kmeans_result_ppc <- kmeans(percentage$PPC_percent, centers = 3)
percentage$PPC_cluster <- kmeans_result_ppc$cluster
Cluster_1 <- subset(percentage, PPC_cluster == 1)
Cluster_2 <- subset(percentage, PPC_cluster == 2)
Cluster_3 <- subset(percentage, PPC_cluster == 3)
Cluster_1
Cluster_2
Cluster_3
combined_dataset
combined_dataset
rm(list=ls())
library(dplyr)
library(tidyr)
library(ggplot2)
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
# Group by Tier 1, 2, 3
Tier_1 = subset(combined_dataset, tier == "1")
Tier_1
Tier_2 = subset(combined_dataset, tier == "2")
Tier_3 = subset(combined_dataset, tier == "3")
Tier_1_pc <- Tier_1 %>%
group_by(plantID) %>%
summarize(total_obs = n(),
ppc_obs = sum(spoilagetype == "PPC"),
percentage_ppc_spoiled = ppc_obs / total_obs * 100)
Tier_1_pc
Tier_2_pc <- Tier_2 %>%
group_by(plantID) %>%
summarize(total_obs = n(),
ppc_obs = sum(spoilagetype == "PPC"),
percentage_ppc_spoiled = ppc_obs / total_obs * 100)
Tier_2_pc
Tier_3_pc <- Tier_3 %>%
group_by(plantID) %>%
summarize(total_obs = n(),
ppc_obs = sum(spoilagetype == "PPC"),
percentage_ppc_spoiled = ppc_obs / total_obs * 100)
Tier_3_pc
result_by_tier = rbind(Tier_1_pc, Tier_2_pc, Tier_3_pc)
result_by_tier
Tier_1_pc$tier = rep(Tier_1,nrow(Tier_1))
Tier_1_pc
Tier_1_pc <- Tier_1_pc %>%
mutate(tier = "Tier_1")
Tier_1_pc
Tier_2_pc <- Tier_2_pc %>%
mutate(tier = "Tier_2")
Tier_3_pc <- Tier_3_pc %>%
mutate(tier = "Tier_3")
result_by_tier = rbind(Tier_1_pc, Tier_2_pc, Tier_3_pc)
result_by_tier
View(result_by_tier)
combined_dataset
View(combined_dataset)
subset(combined_dataset, plantID == "59")
write.csv(result_by_tier,"Validation/result_by_tier.csv")
write.csv(result_by_tier,"Validation/result_by_tier.csv")
write.csv(result_by_tier,"result_by_tier.csv")
test_data = read.csv("test_data_tier_plant.csv")
train_data = read.csv("train_data_tier_plant.csv")
combined_dataset = rbind(test_data[,c(5,6,17)],train_data[,c(5,6,17)])
subset(combined_dataset, plantID == "17")
nrow(subset(combined_dataset, plantID == "17"))
training_data <- read.csv("train_data_with_DI.csv")
testing_data <- read.csv("test_data_with_DI_new.csv")
combined_data <- rbind(training_data[,3:14],testing_data[,c(2:5,7,9,11,6,8,10,12:13)])
combined_data_sub <- subset(combined_data, Day_Initial <= 3)
combined_data_Spore <- subset(combined_data_sub,spoilagetype == "spore spoilage")
SPC_D1 <- combined_data_sub$SPC_DI
mean(SPC_D1)
log10(SPC_D1)
log10(mean(SPC_D1))
log10(sd(SPC_D1))
SPC_D1
sd(log10(SPC_D1))
mean(log10(SPC_D1))
